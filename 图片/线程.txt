一、多线程的引入
1、什么是线程？
  线程是程序执行的一条路径，一个进程可以包含多个线程
  多线程开发执行可以提高程序的效率，可以同时完成多项工作
2、多线程的应用场景
   红蜘蛛同事共享屏幕给多个电脑
   迅雷开启多条线程一起下载
   QQ同时和多个人一起视频
   服务器同时处理多个客户端请求  
二、多线程并行和并发的区别
  并行就是两个任务同时进行，就是甲任务进行同时，乙任务也在进行（需要多核CPU）  
  并发是指两个任务都请求运行，而处理器只能接受一个任务，就把这两个任务安排轮流进行，由于时间间隔比较短，使人感觉两个任务都在运行
  
三、Java的启动是多线程吗？
 A ：Java程序运行原理
      Java命令启动java虚拟机，启动JVM，等于启动了一个应用程序，也就是启动了一个进程，该进程会自动启动一个线程，然后主线程的去调用某个类的main方法
 B ：JVM启动是多线程的吗？
      JVM启动至少启动了垃圾回收线程和主线程，所以是多线程 
	
四、Thread和Runnable
  查看源码的区别：
     a、继承Thread：由于子类重写了Thread类的run()，当调用start()方法时，直接找子类的run方法
     b、实现了Runnable：构造函数中传入了Runnable的引用，成员变量记住了它，start()调用Run方法时内部判断成员变量Runable的引用是否为空，
不为空编译时，看的是Runable的run(),运行时执行的是子类的run()方法
  继承Thread
     好处：可以直接使用Thread类中的方法，代码简单
	 弊端：如果已经有了父类，就不能用这种方法
  实现Runnable接口
     好处：即使自己定义的线程类有了父类也没关系，因为有了父类也可以实现接口，而且接口是可以多实现的
	 弊端：不能直接使用Thread中的方法需要先获取到线程对象后，才能得到Thread的方法，代码复杂
五、多线程（同步代码块）
   1、什么情况下需要同步
         当多线程并发时，有多段代码同时执行时，我们希望某一块代码执行的过程中CPU不要切换到其他线程工作，这时就需要同步
   2、同步代码块
         使用synchronized关键字加上一个锁对象来定义一段代码，这就叫同步代码块
         多个同步代码块如果使用相同的锁对象，那么他们就是同步的		   
六、多线程（以前的线程安全的类回顾）
A、回顾以前说过的线程安全问题
   看源码：Vector StringBuffer Hashtable Collections synchronized
   Vector是线程安全的，ArrayList是线程不安全的
   StringBuffer是线程安全的，StringBuilder是线程不安全的
   Hashtable是线程安全的，HashMap是线程不安全的
七、多线程的优势
    1、线程在程序中是独立的，并发的执行流，但是，与分隔的进程相比，进程中的线程之间的隔离程度要小。它们共享内存，文件句柄和其他
每个进程应有的状态。

    2、线程比进程具有更高的性能，这是由于同一个进程中的线程都有共性:多个线程将共享同一个进程虚拟空间。线程共享的环境包括：
	进程代码段，进程的公有数据等。利用这些共享的数据等,线程很容易实现相互之间的通信。

    3、当操作系统创建一个进程时，必须为进程分配独立的内存空间，并分配大量相关资源：但创建一个线程则简单很多，因此使用多线程来实现
	并发比使用多进程实现并发的性能要高得多。

    4、总结起来，使用多线程编程包含如下几个优点：

      （1）进程间不能共享内存，但线程之间可以共享内存非常容易。

      （2）系统创建进程需要为该进程重新分配系统资源，但创建线程则代价小的多，因此使用多线程来实现多任务并发比多进程的效率高。

      （3）Java语言内置多线程功能支持，而不是单纯地作为底层操作系统的调度方式，从而简化了Java的多线程编程。